{"version":3,"sources":["components/NavBar.js","stores/PartStore.js","stores/ProductStore.js","stores/InventoryPartStore.js","stores/InventoryProductStore.js","AppDispatcher.js","actions/PartSearchActions.js","actions/ProductSearchActions.js","actions/PartDeleteActions.js","components/PartSearchResult.js","actions/ProductDeleteActions.js","components/ProductSearchResult.js","components/Search.js","actions/InventoryPartSearchActions.js","components/InventoryPartSearchResult.js","components/InventoryProductSearchResult.js","actions/InventoryProductSearchActions.js","components/Inventory.js","actions/ProductInsertActions.js","components/ProductInsert.js","actions/ProductUpdateActions.js","components/ProductUpdate.js","actions/PartInsertActions.js","components/PartInsert.js","actions/PartUpdateActions.js","components/PartUpdate.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","React","Component","partStore","_parts","this","emit","callback","on","removeChangeListener","Eventemitter","productStore","_products","inventoryPartStore","inventoryProductStore","dispatcher","action","dispatch","Dispatcher","register","payload","actionType","product_id","console","log","axios","get","then","resp","data","emitChange","filter","product","product_name","includes","part_id","part","part_name","post","product_price","description","alert","catch","error","response","put","delete","part_price","inventory_type","inventory_id","InventoryPartStore","inventories","InventoryProductStore","part_qty","qty","handleViewAction","product_qty","PartSearchResult","state","parts","_onChange","bind","setState","PartStore","addChangeListener","PartDeleteActions","PartSearchActions","require","map","key","class","placeholder","onChange","e","target","value","onClick","handleOrder","handleDelete","ProductSearchResult","products","ProductStore","ProductDeleteActions","initialState","search_type","Search","search","ProductSearchActions","handleSubmit","InventoryPartSearchResult","InventoryPartSearchActions","availability","handleRequire","InventoryProductSearchResult","sell","handleSell","inventoryType","inventoryID","Inventory","InventoryProductSearchActions","name","colSpan","ProductInsert","st","ProductInsertActions","insert","ProductUpdate","ProductUpdateActions","update","PartInsert","PartInsertActions","PartUpdate","PartUpdateActions","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.dc3ad55f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nclass NavBar extends React.Component{\r\n    render(){\r\n        return(\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"/\">Inventory Manager System</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item active\">\r\n                        <a className=\"nav-link\" href=\"/search\">Keresés</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/fetchInventory\">Raktár</a>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"productDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        Termékek\r\n                        </a>\r\n                        <div className=\"dropdown-menu\" aria-labelledby=\"productDropdown\">\r\n                            <a className=\"dropdown-item nav-link\" href=\"/insertProduct\">Termék létrehozása</a>\r\n                            <a className=\"dropdown-item nav-link\" href=\"/editProduct\">Termék szerkesztése</a>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"partDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        Alkatrész\r\n                        </a>\r\n                        <div className=\"dropdown-menu\" aria-labelledby=\"partDropdown\">\r\n                            <a className=\"dropdown-item nav-link\" href=\"/insertPart\">Alkatrész létrehozása</a>\r\n                            <a className=\"dropdown-item nav-link\" href=\"/editPart\">Alkatrész szerkesztése</a>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import Eventemitter from 'events'\r\n\r\nclass PartStore extends Eventemitter{\r\n\r\n    _parts = [];\r\n\r\n    emitChange(){\r\n        this.emit('Change');\r\n    }\r\n\r\n    addChangeListener(callback){\r\n        this.on('Change',callback);\r\n    }\r\n    removeChangeListener(callback){\r\n        this.removeChangeListener('Change',callback);\r\n    }\r\n}\r\n\r\nvar partStore = new PartStore();\r\n\r\nexport default partStore;","import Eventemitter from 'events'\r\n\r\nclass ProductStore extends Eventemitter{\r\n\r\n    _products = [];\r\n\r\n    emitChange(){\r\n        this.emit('Change');\r\n    }\r\n\r\n    addChangeListener(callback){\r\n        this.on('Change',callback);\r\n    }\r\n    removeChangeListener(callback){\r\n        this.removeChangeListener('Change',callback);\r\n    }\r\n}\r\n\r\nvar productStore = new ProductStore();\r\n\r\nexport default productStore;","import Eventemitter from 'events'\r\n\r\nclass InventoryPartStore extends Eventemitter{\r\n\r\n    _parts = [];\r\n\r\n    emitChange(){\r\n        this.emit('Change');\r\n    }\r\n\r\n    addChangeListener(callback){\r\n        this.on('Change',callback);\r\n    }\r\n    removeChangeListener(callback){\r\n        this.removeChangeListener('Change',callback);\r\n    }\r\n}\r\n\r\nvar inventoryPartStore = new InventoryPartStore();\r\n\r\nexport default inventoryPartStore;","import Eventemitter from 'events'\r\n\r\nclass InventoryProductStore extends Eventemitter{\r\n\r\n    _products = [];\r\n\r\n    emitChange(){\r\n        this.emit('Change');\r\n    }\r\n\r\n    addChangeListener(callback){\r\n        this.on('Change',callback);\r\n    }\r\n    removeChangeListener(callback){\r\n        this.removeChangeListener('Change',callback);\r\n    }\r\n}\r\n\r\nvar inventoryProductStore = new InventoryProductStore();\r\n\r\nexport default inventoryProductStore;","import { Dispatcher } from \"flux\";\r\nimport axios from 'axios';\r\nimport partStore from './stores/PartStore';\r\nimport productStore from './stores/ProductStore';\r\nimport InventoryPartStore from './stores/InventoryPartStore';\r\nimport InventoryProductStore from './stores/InventoryProductStore';\r\n\r\nclass AppDispatcher extends Dispatcher{\r\n    handleViewAction(action){\r\n        this.dispatch({\r\n            action: action\r\n        });\r\n    }\r\n}\r\n\r\nconst dispatcher = new AppDispatcher();\r\n\r\ndispatcher.register((payload) => {\r\n    switch(payload.action.actionType){\r\n        case 'PRODUCT_SEARCH':\r\n            if(payload.action.payload.product_id !== ''){\r\n                console.log('Product keresés ID alapján');\r\n                 axios.get('/products/'+payload.action.payload.product_id).then((resp)=>{\r\n                     productStore._products = resp.data;\r\n                     productStore.emitChange();\r\n                 });\r\n             }else{\r\n                console.log('Product keresés név alapján');\r\n                axios.get('/products').then((resp)=>{\r\n                    productStore._products = resp.data.filter((product)=>{\r\n                        return product.product_name.includes(payload.action.payload.product_name)\r\n                    });\r\n                    productStore.emitChange();\r\n                });\r\n             }\r\n        break;\r\n        case 'PART_SEARCH':\r\n            if(payload.action.payload.part_id !== ''){\r\n                console.log('Part keresés ID alapján');\r\n                 axios.get('/parts/'+payload.action.payload.part_id).then((resp)=>{\r\n                     partStore._parts = resp.data;\r\n                     partStore.emitChange();\r\n                 });\r\n             }\r\n             else{\r\n                 console.log('Part keresés név alapján');\r\n                 axios.get('/parts').then((resp)=>{\r\n                     partStore._parts = resp.data.filter((part)=>{\r\n                         return part.part_name.includes(payload.action.payload.part_name)\r\n                     });\r\n                     partStore.emitChange();\r\n                 });\r\n             }\r\n        break;\r\n        case 'PRODUCT_INSERT':\r\n            axios.post('/products',{\r\n                product_id : payload.action.payload.product_id,\r\n                product_name : payload.action.payload.product_name,\r\n                product_price : payload.action.payload.product_price,\r\n                description : payload.action.payload.description\r\n            }).then(resp=>{alert(resp.data.description)}).catch(error => {alert(error.response.data.description) });\r\n        break;\r\n        case 'PRODUCT_UPDATE':\r\n            if(payload.action.payload.product_id !== ''){\r\n                axios.put('/products/'+payload.action.payload.product_id,{\r\n                product_id : payload.action.payload.product_id,\r\n                product_name : payload.action.payload.product_name,\r\n                product_price : payload.action.payload.product_price,\r\n                description : payload.action.payload.description\r\n                }).then(resp=>{alert(resp.data.description)}).catch(error => {alert(error.response.data.description) });\r\n            }\r\n        break;\r\n        case 'PRODUCT_DELETE':\r\n            axios.delete('/products/'+payload.action.payload.product_id).then(resp=>{alert(resp.data.description)}).catch(error => {alert(error.response.data.description) });\r\n        break;\r\n        case 'PART_INSERT':\r\n            axios.post('/parts',{\r\n                part_id : payload.action.payload.part_id,\r\n                part_name : payload.action.payload.part_name,\r\n                part_price : payload.action.payload.part_price,\r\n                description : payload.action.payload.description\r\n            }).then(resp=>{alert(resp.data.description)}).catch(error => {alert(error.response.data.description) });\r\n        break;\r\n        case 'PART_UPDATE':\r\n            if(payload.action.payload.product_id !== ''){\r\n                axios.put('/parts/'+payload.action.payload.part_id,{\r\n                    part_id : payload.action.payload.part_id,\r\n                    part_name : payload.action.payload.part_name,\r\n                    part_price : payload.action.payload.part_price,\r\n                    description : payload.action.payload.description\r\n                }).then(resp=>{alert(resp.data.description)}).catch(error => {alert(error.response.data.description) });\r\n            }\r\n        break;\r\n        case 'PART_DELETE':\r\n            axios.delete('/parts/'+payload.action.payload.part_id).then(resp=>{alert(resp.data.description)}).catch(error => {alert(error.response.data.description) });\r\n        break;\r\n        case 'INVENTORY_PART_SEARCH':\r\n            axios.get('/inventory/'+payload.action.payload.inventory_type+'/'+payload.action.payload.inventory_id).then(resp => {\r\n                InventoryPartStore._parts = resp.data.inventories;\r\n                InventoryPartStore.emitChange();\r\n            });\r\n        break;\r\n        case 'INVENTORY_PRODUCT_SEARCH':\r\n            axios.get('/inventory/'+payload.action.payload.inventory_type+'/'+payload.action.payload.inventory_id).then(resp => {\r\n                InventoryProductStore._products = resp.data.inventories;\r\n                InventoryProductStore.emitChange();\r\n            });\r\n        break;\r\n        case 'PART_REQUIRE':\r\n            axios.post('/parts/order',{\r\n                part_id : payload.action.payload.part_id,\r\n                part_qty : payload.action.payload.part_qty\r\n            }).then(resp=>{alert(resp.data.description)}).catch(error => {alert(error.response.data.description) });\r\n        break;\r\n        case 'PRODUCT_SELL':\r\n            axios.post('products/sell',{\r\n                product_id : payload.action.payload.product_id,\r\n                qty : payload.action.payload.qty\r\n            }).then(resp=>{alert(resp.data.description)}).catch(error => {alert(error.response.data.description) });\r\n        break;\r\n        case 'INVENTORY_PART_REQUIRE':\r\n            axios.post('parts/require', {\r\n                part_id: payload.action.payload.part_id,\r\n                part_qty: payload.action.payload.part_qty\r\n            }).then(resp=>{alert(resp.data.description)}).catch(error => {alert(error.response.data.description) });\r\n        break;\r\n        default:\r\n            return;\r\n    }\r\n});\r\n\r\nexport default dispatcher;","import dispatcher from '../AppDispatcher';\r\n\r\nclass PartSearchActions{\r\n    \r\n    search(part_id, part_name){\r\n        dispatcher.handleViewAction({\r\n            actionType : 'PART_SEARCH',\r\n            payload : {\r\n                part_id : part_id,\r\n                part_name : part_name\r\n            }\r\n        });\r\n    }\r\n    require(part_id, part_qty){\r\n        dispatcher.handleViewAction({\r\n            actionType : 'PART_REQUIRE',\r\n            payload : {\r\n                part_id : part_id,\r\n                part_qty: part_qty\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default new PartSearchActions();","import dispatcher from '../AppDispatcher';\r\n\r\nclass ProductSearchActions{\r\n    \r\n    search(product_id, product_name){\r\n        dispatcher.handleViewAction({\r\n            actionType : 'PRODUCT_SEARCH',\r\n            payload : {\r\n                product_id : product_id,\r\n                product_name : product_name\r\n                \r\n            }\r\n        });\r\n    }\r\n    sell(product_id, product_qty){\r\n        dispatcher.handleViewAction({\r\n            actionType : 'PRODUCT_SELL',\r\n            payload : {\r\n                product_id : product_id,\r\n                qty : product_qty\r\n                \r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default new ProductSearchActions();","import dispatcher from '../AppDispatcher';\r\n\r\nclass PartDeleteActions{\r\n    \r\n    delete(part_id){\r\n        dispatcher.handleViewAction({\r\n            actionType : 'PART_DELETE',\r\n            payload : {\r\n                part_id : part_id\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default new PartDeleteActions();","import React from 'react';\r\nimport PartStore from '../stores/PartStore';\r\nimport PartDeleteActions from '../actions/PartDeleteActions';\r\nimport PartSearchActions from '../actions/PartSearchActions';\r\n\r\nclass PartSearchResult extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state= {parts : [],part_qty : 0};\r\n        this._onChange = this._onChange.bind(this);\r\n    }\r\n\r\n    _onChange(){\r\n        this.setState({parts : PartStore._parts})\r\n    }\r\n\r\n    componentDidMount(){\r\n        PartStore.addChangeListener(this._onChange)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        PartStore.removeChangeListener(this._onChange);\r\n    }\r\n\r\n    handleDelete(part_id){\r\n        PartDeleteActions.delete(part_id);\r\n    }\r\n    \r\n    handleOrder(part_id,part_qty){\r\n        PartSearchActions.require(part_id,part_qty);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"part_table table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <td>Id</td>\r\n                                <td>Name</td>\r\n                                <td>Price</td>\r\n                                <td>Description</td>\r\n                                <td>Options</td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            { \r\n                                this.state.parts.map((part)=>{\r\n                                        return(\r\n                                            <tr key={part.part_id}>\r\n                                                <td className=\"p-3\">{part.part_id}</td>\r\n                                                <td>{part.part_name}</td>\r\n                                                <td>{part.part_price}</td>\r\n                                                <td className=\"p-3\">{part.description}</td>\r\n                                                <td> <input type='number' class=\"form-control\" placeholder=\"Mennyiség\" onChange={(e)=>{\r\n                                                    let state = this.state;\r\n                                                    state.part_qty = e.target.value;\r\n                                                    this.setState(state);\r\n                                                }}></input> <button className=\"btn btn-sm btn-info\" onClick={() => this.handleOrder(part.part_id,this.state.part_qty)}>Rendelés</button>\r\n                                                    <button className=\"btn btn-sm btn-danger\" onClick={() => this.handleDelete(part.part_id)}>Törlés</button></td>\r\n                                            </tr>\r\n                                        );\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default PartSearchResult;","import dispatcher from '../AppDispatcher';\r\n\r\nclass ProductDeleteActions{\r\n    \r\n    delete(product_id){\r\n        dispatcher.handleViewAction({\r\n            actionType : 'PRODUCT_DELETE',\r\n            payload : {\r\n                product_id : product_id\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default new ProductDeleteActions();","import React from 'react';\r\nimport ProductStore from '../stores/ProductStore';\r\nimport ProductDeleteActions from '../actions/ProductDeleteActions';\r\nimport ProductSearchActions from '../actions/ProductSearchActions';\r\n\r\nclass ProductSearchResult extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state= {products : []};\r\n        this._onChange = this._onChange.bind(this);\r\n    }\r\n\r\n    _onChange(){\r\n        this.setState({products : ProductStore._products})\r\n    }\r\n\r\n    componentDidMount(){\r\n    ProductStore.addChangeListener(this._onChange)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n    ProductStore.removeChangeListener(this._onChange);\r\n    \r\n    }\r\n\r\n    handleDelete(product_id){\r\n        ProductDeleteActions.delete(product_id);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"table-responsive\">\r\n                <table className=\"product_table table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td>Id</td>\r\n                            <td>Name</td>\r\n                            <td>Price</td>\r\n                            <td>Description</td>\r\n                            <td>Options</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.products.map((product)=>{\r\n                                    return(\r\n                                        <tr key={product.product_id}>\r\n                                            <td className=\"p-3\">{product.product_id}</td>\r\n                                            <td>{product.product_name}</td>\r\n                                            <td>{product.product_price}</td>\r\n                                            <td className=\"p-3\">{product.description}</td>\r\n                                            <td><button className=\"btn btn-danger btn-sm\" onClick={() => this.handleDelete(product.product_id)}>Törlés</button></td>\r\n                                        </tr>\r\n                                    );\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n           </div>\r\n        );\r\n    }\r\n}\r\nexport default ProductSearchResult;","import React from 'react';\r\nimport PartSearchActions from '../actions/PartSearchActions';\r\nimport ProductSearchActions from '../actions/ProductSearchActions';\r\nimport PartSearchResult from './PartSearchResult';\r\nimport ProductSearchResult from './ProductSearchResult';\r\n\r\nconst initialState = {\r\n    part_id: \"\",\r\n    part_name: \"\",\r\n\r\n    product_id: \"\",\r\n    product_name: \"\",\r\n    \r\n    search_type: \"part\"\r\n};\r\n\r\nclass Search extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = initialState;\r\n    }\r\n\r\n    handleSubmit(){\r\n        if(this.state.search_type == \"part\"){\r\n            PartSearchActions.search(this.state.part_id, this.state.part_name);\r\n        }\r\n        if(this.state.search_type == \"product\"){\r\n            ProductSearchActions.search(this.state.product_id, this.state.product_name);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <h2 className=\"text-center mt-5\">Keresés</h2>\r\n                <div className=\"searchBox mx-auto mt-3\">\r\n                    <select onChange={(e) => {\r\n                        let state = this.state;\r\n                        state.search_type = e.target.value;\r\n                        this.setState(state);\r\n                         }} className=\"form-control mb-3\">\r\n                        <option value=\"part\">Alkatrész</option>\r\n                        <option value=\"product\">Termék</option>\r\n                    </select>\r\n                    \r\n                    <input type={\"number\"} placeholder=\"ID\" className=\"form-control mb-3\" onChange={(e) => {\r\n                        let state = this.state;\r\n                        state.part_id = \"\";\r\n                        state.product_id = \"\";\r\n                        if(state.search_type == \"part\"){\r\n                            state.part_id = e.target.value;\r\n                        }else{\r\n                            state.product_id = e.target.value;\r\n                        }\r\n                        this.setState(state);\r\n                    }}/>\r\n\r\n                    <input type={\"text\"} placeholder=\"Megnevezés\" className=\"form-control\" onChange={(e) => {\r\n                        let state = this.state;\r\n                        state.part_name = \"\";\r\n                        state.product_name = \"\";\r\n                        if(state.search_type == \"part\"){\r\n                            state.part_name = e.target.value;\r\n                        }else{\r\n                            state.product_name = e.target.value;\r\n                        }\r\n                        this.setState(state);\r\n                    }} />\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary mt-2\" onClick={() => this.handleSubmit() }>Keresés</button>\r\n                </div>\r\n\r\n                <PartSearchResult />\r\n                <ProductSearchResult />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import dispatcher from '../AppDispatcher';\r\n\r\nclass InventoryPartSearchActions{\r\n    \r\n    search(inventory_type, inventory_id){\r\n        dispatcher.handleViewAction({\r\n            actionType : 'INVENTORY_PART_SEARCH',\r\n            payload : {\r\n                inventory_type : inventory_type,\r\n                inventory_id: inventory_id\r\n            }\r\n        });\r\n    }\r\n\r\n    require(part_id, part_qty){\r\n        dispatcher.handleViewAction({\r\n            actionType: 'INVENTORY_PART_REQUIRE',\r\n            payload: {\r\n                part_id: part_id,\r\n                part_qty: part_qty\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default new InventoryPartSearchActions();","import React from 'react';\r\nimport InventoryPartStore from '../stores/InventoryPartStore';\r\nimport InventoryPartSearchActions from '../actions/InventoryPartSearchActions';\r\n\r\nclass InventoryPartSearchResult extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state= {parts : [], part_qty : 0};\r\n        this._onChange = this._onChange.bind(this);\r\n    }\r\n\r\n    _onChange(){\r\n        this.setState({parts : InventoryPartStore._parts})\r\n    }\r\n\r\n    componentDidMount(){\r\n        InventoryPartStore.addChangeListener(this._onChange)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        InventoryPartStore.removeChangeListener(this._onChange);\r\n    }\r\n\r\n    handleRequire(part_id, part_qty){\r\n        InventoryPartSearchActions.require(part_id, part_qty);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"table-responsive\">\r\n                <h3 className=\"text-center\">Alkatrészek</h3>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td>Id</td>\r\n                            <td>Name</td>\r\n                            <td>Quantity</td>\r\n                            <td>Availability</td>\r\n                            <td>Options</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.parts.map((part)=>{\r\n                                    return(\r\n                                        <tr key={part.part_id}>\r\n                                            <td className=\"p-3\">{part.part_id}</td>\r\n                                            <td>{part.part_name}</td>\r\n                                            <td>{part.qty}</td>\r\n                                            <td className=\"p-3\">{part.availability}</td>\r\n                                            <td>\r\n                                                <input type=\"number\" placeholder=\"Mennyiség\" onChange={(e) => {\r\n                                                    let state = this.state;\r\n                                                    state.part_qty = e.target.value;\r\n                                                    this.setState(state);\r\n                                                }} />\r\n                                                <button class=\"btn btn-info\" onClick={() => {\r\n                                                    this.handleRequire(part.part_id, this.state.part_qty)\r\n                                                }}>Igénylés</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    );\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n           </div>\r\n        );\r\n    }\r\n}\r\nexport default InventoryPartSearchResult;","import React from 'react';\r\nimport InventoryProductStore from '../stores/InventoryProductStore';\r\nimport ProductSearchActions from '../actions/ProductSearchActions';\r\n\r\nclass InventoryProductSearchResult extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state= {products : [], qty: 0};\r\n        this._onChange = this._onChange.bind(this);\r\n    }\r\n\r\n    _onChange(){\r\n        this.setState({products : InventoryProductStore._products})\r\n    }\r\n\r\n    componentDidMount(){\r\n        InventoryProductStore.addChangeListener(this._onChange)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        InventoryProductStore.removeChangeListener(this._onChange);\r\n    }\r\n\r\n    handleSell(product_id, qty){\r\n        ProductSearchActions.sell(product_id, qty);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"table-responsive\">\r\n                <h3 className=\"text-center\">Termékek</h3>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td>Id</td>\r\n                            <td>Name</td>\r\n                            <td>Quantity</td>\r\n                            <td>Availability</td>\r\n                            <td>Options</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.products.map((product)=>{\r\n                                    return(\r\n                                        <tr key={product.product_id}>\r\n                                            <td className=\"p-3\">{product.product_id}</td>\r\n                                            <td>{product.product_name}</td>\r\n                                            <td>{product.qty}</td>\r\n                                            <td className=\"p-3\">{product.availability}</td>\r\n                                            <td>\r\n                                                <input type=\"number\" placeholder=\"Mennyiség\" class=\"form-control\" onChange={(e) => {\r\n                                                    let state = this.state;\r\n                                                    state.qty = e.target.value;\r\n                                                    this.setState(state);\r\n                                                }} />\r\n                                                <button className=\"btn btn-info\" onClick={() => {this.handleSell(product.product_id, this.state.qty)}}>Eladás</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    );\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n           </div>\r\n        );\r\n    }\r\n}\r\nexport default InventoryProductSearchResult;","import dispatcher from '../AppDispatcher';\r\n\r\nclass InventoryProductSearchActions{\r\n    \r\n    search(inventory_type, inventory_id){\r\n        dispatcher.handleViewAction({\r\n            actionType : 'INVENTORY_PRODUCT_SEARCH',\r\n            payload : {\r\n                inventory_type : inventory_type,\r\n                inventory_id: inventory_id\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default new InventoryProductSearchActions();","import React from 'react';\r\nimport InventoryPartSearchResult from '../components/InventoryPartSearchResult';\r\nimport InventoryProductSearchResult from '../components/InventoryProductSearchResult';\r\n\r\nimport InventoryPartSearchActions from '../actions/InventoryPartSearchActions';\r\nimport InventoryProductSearchActions from '../actions/InventoryProductSearchActions';\r\n\r\nconst initialState = {\r\n    inventoryType: \"part\",\r\n    inventoryID: \"1\"\r\n};\r\n\r\nclass Inventory extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = initialState;\r\n    }\r\n\r\n    handleSubmit(){\r\n        if(this.state.inventoryType == \"part\"){\r\n            InventoryPartSearchActions.search(this.state.inventoryType, this.state.inventoryID);\r\n        }\r\n        if(this.state.inventoryType == \"product\"){\r\n            InventoryProductSearchActions.search(this.state.inventoryType, this.state.inventoryID);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"inventoryBox mx-auto mt-5\">\r\n                <h3 className=\"text-center\">Raktár lekérdezés</h3>\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Típus</td>\r\n                                <td><select className=\"form-control\" name={\"inventoryType\"} onChange={(e) => {\r\n                                    let state = this.state;\r\n                                    state.inventoryType = e.target.value;\r\n                                    state.inventoryType == \"part\" ? state.inventoryID = 1 : state.inventoryID = 2;\r\n                                    this.setState(state);\r\n                                }}>\r\n                                    <option value=\"part\">Alkatrész</option>\r\n                                    <option value=\"product\">Termék</option>\r\n                                    </select></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td \r\n                                colSpan={2}>\r\n                                    <button className=\"btn btn-primary\" onClick={() => { this.handleSubmit() }}>Lekérdez</button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <InventoryPartSearchResult />\r\n                <InventoryProductSearchResult />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Inventory;","import dispatcher from '../AppDispatcher';\r\n\r\nclass ProductInsertActions{\r\n    \r\n    insert(product_id, product_name,product_price,description){\r\n        dispatcher.handleViewAction({\r\n            actionType : 'PRODUCT_INSERT',\r\n            payload : {\r\n                product_id : product_id,\r\n                product_name : product_name,\r\n                product_price : product_price,\r\n                description : description\r\n                \r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default new ProductInsertActions();","import React from 'react';\r\nimport ProductInsertActions from '../actions/ProductInsertActions';\r\n\r\nclass ProductInsert extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            product_id : \"\",\r\n            product_name : \"\",\r\n            product_price : \"\",\r\n            description : \"\"\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"insertForm mx-auto mt-5\">\r\n                <h3 className=\"text-center\">Termék létrehozása</h3>\r\n                <div className=\"table-responsive\">\r\n                    <table class=\"table borderless\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Id</td>\r\n                                <td><input \r\n                                        type={\"number\"}\r\n                                        value={this.state.product_id}\r\n                                        onChange={(e)=>{\r\n                                            let st = this.state;\r\n                                            st.product_id = e.target.value;\r\n                                            this.setState(st);}}\r\n                                    /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Name</td>\r\n                                <td><input type={\"text\"}\r\n                                            value={this.state.product_name}\r\n                                            onChange={(e)=>{\r\n                                                let st = this.state;\r\n                                                st.product_name = e.target.value;\r\n                                                this.setState(st);\r\n                                            }}           \r\n                                /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Price</td>\r\n                                <td><input type={\"number\"}\r\n                                            value={this.state.product_price}\r\n                                            onChange={(e)=>{\r\n                                                let st = this.state;\r\n                                                st.product_price = e.target.value;\r\n                                                this.setState(st);\r\n                                            }}           \r\n                                /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Description</td>\r\n                                <td><input type={\"text\"}\r\n                                            value={this.state.description}\r\n                                            onChange={(e)=>{\r\n                                                let st = this.state;\r\n                                                st.description = e.target.value;\r\n                                                this.setState(st);\r\n                                            }}           \r\n                                /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td \r\n                                colSpan={2}>\r\n                                    <button\r\n                                        className=\"btn btn-info\"\r\n                                        onClick={()=>{ProductInsertActions.insert(this.state.product_id, this.state.product_name,this.state.product_price,this.state.description)}}\r\n                                        >Insert\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductInsert;","import dispatcher from '../AppDispatcher';\r\n\r\nclass ProductUpdateActions{\r\n    \r\n    update(product_id, product_name,product_price,description){\r\n        dispatcher.handleViewAction({\r\n            actionType : 'PRODUCT_UPDATE',\r\n            payload : {\r\n                product_id : product_id,\r\n                product_name : product_name,\r\n                product_price : product_price,\r\n                description : description\r\n                \r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default new ProductUpdateActions();","import React from 'react';\r\nimport ProductUpdateActions from '../actions/ProductUpdateActions';\r\n\r\nclass ProductUpdate extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            product_id : \"\",\r\n            product_name : \"\",\r\n            product_price : \"\",\r\n            description : \"\"\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"updateForm mx-auto mt-5\">\r\n                <h3 className=\"text-center\">Termék szerkesztése</h3>\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table borderless\">\r\n                        <tr>\r\n                            <td>Id</td>\r\n                            <td><input \r\n                                    type={\"number\"}\r\n                                    value={this.state.product_id}\r\n                                    onChange={(e)=>{\r\n                                        let st = this.state;\r\n                                        st.product_id = e.target.value;\r\n                                        this.setState(st);}}\r\n                                /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Name</td>\r\n                            <td><input type={\"text\"}\r\n                                        value={this.state.product_name}\r\n                                        onChange={(e)=>{\r\n                                            let st = this.state;\r\n                                            st.product_name = e.target.value;\r\n                                            this.setState(st);\r\n                                        }}           \r\n                            /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Price</td>\r\n                            <td><input type={\"number\"}\r\n                                        value={this.state.product_price}\r\n                                        onChange={(e)=>{\r\n                                            let st = this.state;\r\n                                            st.product_price = e.target.value;\r\n                                            this.setState(st);\r\n                                        }}           \r\n                            /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Description</td>\r\n                            <td><input type={\"text\"}\r\n                                        value={this.state.description}\r\n                                        onChange={(e)=>{\r\n                                            let st = this.state;\r\n                                            st.description = e.target.value;\r\n                                            this.setState(st);\r\n                                        }}           \r\n                            /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td \r\n                            colSpan={2}>\r\n                                <button\r\n                                    className=\"btn btn-info\"\r\n                                    onClick={()=>{ProductUpdateActions.update(this.state.product_id, this.state.product_name,this.state.product_price,this.state.description)}}\r\n                                    >Update\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductUpdate;","import dispatcher from '../AppDispatcher';\r\n\r\nclass PartInsertActions{\r\n    \r\n    insert(part_id, part_name,part_price,description){\r\n        dispatcher.handleViewAction({\r\n            actionType : 'PART_INSERT',\r\n            payload : {\r\n                part_id : part_id,\r\n                part_name : part_name,\r\n                part_price : part_price,\r\n                description : description\r\n                \r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default new PartInsertActions();","import React from 'react';\r\nimport PartInsertActions from '../actions/PartInsertActions';\r\n\r\nclass PartInsert extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            part_id : \"\",\r\n            part_name : \"\",\r\n            part_price : \"\",\r\n            description : \"\"\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"insertForm mx-auto mt-5\">\r\n                <h3 className=\"text-center\">Alkatrész létrehozása</h3>\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table borderless\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Id</td>\r\n                                <td><input \r\n                                        type={\"number\"}\r\n                                        value={this.state.part_id}\r\n                                        onChange={(e)=>{\r\n                                            let st = this.state;\r\n                                            st.part_id = e.target.value;\r\n                                            this.setState(st);}}\r\n                                    /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Name</td>\r\n                                <td><input type={\"text\"}\r\n                                            value={this.state.part_name}\r\n                                            onChange={(e)=>{\r\n                                                let st = this.state;\r\n                                                st.part_name = e.target.value;\r\n                                                this.setState(st);\r\n                                            }}           \r\n                                /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Price</td>\r\n                                <td><input type={\"number\"}\r\n                                            value={this.state.part_price}\r\n                                            onChange={(e)=>{\r\n                                                let st = this.state;\r\n                                                st.part_price = e.target.value;\r\n                                                this.setState(st);\r\n                                            }}           \r\n                                /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Description</td>\r\n                                <td><input type={\"text\"}\r\n                                            value={this.state.description}\r\n                                            onChange={(e)=>{\r\n                                                let st = this.state;\r\n                                                st.description = e.target.value;\r\n                                                this.setState(st);\r\n                                            }}           \r\n                                /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td \r\n                                colSpan={2}>\r\n                                    <button\r\n                                        className=\"btn btn-info\"\r\n                                        onClick={()=>{PartInsertActions.insert(this.state.part_id, this.state.part_name,this.state.part_price,this.state.description)}}\r\n                                        >Insert\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PartInsert;","import dispatcher from '../AppDispatcher';\r\n\r\nclass PartUpdateActions{\r\n    \r\n    update(part_id, part_name,part_price,description){\r\n        dispatcher.handleViewAction({\r\n            actionType : 'PART_UPDATE',\r\n            payload : {\r\n                part_id : part_id,\r\n                part_name : part_name,\r\n                part_price : part_price,\r\n                description : description\r\n                \r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default new PartUpdateActions();","import React from 'react';\r\nimport PartUpdateActions from '../actions/PartUpdateActions';\r\n\r\nclass PartUpdate extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            part_id : \"\",\r\n            part_name : \"\",\r\n            part_price : \"\",\r\n            description : \"\"\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"updateForm mx-auto mt-5\">\r\n                <h3 className=\"text-center\">Alkatrész szerkesztése</h3>\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table borderless\">\r\n                        <tr>\r\n                            <td>Id</td>\r\n                            <td><input \r\n                                    type={\"number\"}\r\n                                    value={this.state.part_id}\r\n                                    onChange={(e)=>{\r\n                                        let st = this.state;\r\n                                        st.part_id = e.target.value;\r\n                                        this.setState(st);}}\r\n                                /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Name</td>\r\n                            <td><input type={\"text\"}\r\n                                        value={this.state.part_name}\r\n                                        onChange={(e)=>{\r\n                                            let st = this.state;\r\n                                            st.part_name = e.target.value;\r\n                                            this.setState(st);\r\n                                        }}           \r\n                            /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Price</td>\r\n                            <td><input type={\"number\"}\r\n                                        value={this.state.part_price}\r\n                                        onChange={(e)=>{\r\n                                            let st = this.state;\r\n                                            st.part_price = e.target.value;\r\n                                            this.setState(st);\r\n                                        }}           \r\n                            /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Description</td>\r\n                            <td><input type={\"text\"}\r\n                                        value={this.state.description}\r\n                                        onChange={(e)=>{\r\n                                            let st = this.state;\r\n                                            st.description = e.target.value;\r\n                                            this.setState(st);\r\n                                        }}           \r\n                            /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td \r\n                            colSpan={2}>\r\n                                <button\r\n                                    className=\"btn btn-info\"\r\n                                    onClick={()=>{PartUpdateActions.update(this.state.part_id, this.state.part_name,this.state.part_price,this.state.description)}}\r\n                                    >Update\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PartUpdate;","import React from 'react';\r\nimport './App.scss';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'jquery/dist/jquery.min.js';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\r\n\r\nimport NavBar from \"./components/NavBar\";\r\n\r\nimport Search from \"./components/Search\";\r\nimport Inventory from \"./components/Inventory\";\r\n\r\nimport ProductInsert from './components/ProductInsert';\r\nimport ProductUpdate from './components/ProductUpdate';\r\nimport PartInsert from './components/PartInsert';\r\nimport PartUpdate from './components/PartUpdate';\r\n\r\nfunction App() {\r\n  \r\n    return (\r\n        <div>\r\n            <BrowserRouter>\r\n                <NavBar />\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Search} />\r\n                    <Route path=\"/search\" component={Search} />\r\n                    <Route path=\"/fetchInventory\" component={Inventory} />\r\n                    <Route path=\"/insertProduct\" component={ProductInsert} />\r\n                    <Route path=\"/editProduct\" component={ProductUpdate} />\r\n                    <Route path=\"/insertPart\" component={PartInsert} />\r\n                    <Route path=\"/editPart\" component={PartUpdate} />\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}